Index: source/CMakeLists.txt
===================================================================
--- source.orig/CMakeLists.txt
+++ source/CMakeLists.txt
@@ -9,12 +9,12 @@ project(hsi VERSION ${VER} LANGUAGES CXX
 set(CMAKE_CXX_STANDARD 23)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
-find_package(Qt6 6.5 REQUIRED COMPONENTS Widgets Quick QuickControls2 WaylandClient)
+find_package(Qt6 6.4 REQUIRED COMPONENTS Widgets Quick QuickControls2 WaylandClient)
 find_package(PkgConfig REQUIRED)
 
 pkg_check_modules(hyprutils REQUIRED IMPORTED_TARGET hyprutils)
 
-qt_standard_project_setup(REQUIRES 6.5)
+qt_standard_project_setup(REQUIRES 6.4)
 
 add_subdirectory(src)
 
Index: source/src/main.cpp
===================================================================
--- source.orig/src/main.cpp
+++ source/src/main.cpp
@@ -2,7 +2,6 @@
 #include <qapplication.h>
 #include <qqmlapplicationengine.h>
 #include <qquickstyle.h>
-#include <qtenvironmentvariables.h>
 
 int main(int argc, char* argv[]) {
     QApplication app(argc, argv);
@@ -10,7 +9,7 @@ int main(int argc, char* argv[]) {
     app.setApplicationName("Hyprland System Info");
 
     if (qEnvironmentVariableIsEmpty("QT_QUICK_CONTROLS_STYLE"))
-        QQuickStyle::setStyle("org.kde.desktop");
+        QQuickStyle::setStyle("Basic");
 
     QQmlApplicationEngine engine;
     engine.addImageProvider("systemIcons", new CSystemIconProvider);
Index: source/src/SystemInfo.cpp
===================================================================
--- source.orig/src/SystemInfo.cpp
+++ source/src/SystemInfo.cpp
@@ -14,7 +14,6 @@
 #include <format>
 
 #include <qguiapplication.h>
-#include <qtenvironmentvariables.h>
 #include <qwindowdefs.h>
 #include <unistd.h>
 #include <sys/utsname.h>
Index: source/src/CMakeLists.txt
===================================================================
--- source.orig/src/CMakeLists.txt
+++ source/src/CMakeLists.txt
@@ -8,6 +8,7 @@ qt_add_executable(hyprsysteminfo
 
 qt_add_qml_module(hyprsysteminfo
     URI org.hyprland.systeminfo
+    RESOURCE_PREFIX /qt/qml
     VERSION 1.0
     QML_FILES main.qml
 )
Index: source/src/WaylandScreen.cpp
===================================================================
--- source.orig/src/WaylandScreen.cpp
+++ source/src/WaylandScreen.cpp
@@ -7,7 +7,6 @@
 #include <qcontainerfwd.h>
 #include <qsize.h>
 #include <qstringliteral.h>
-#include <qtclasshelpermacros.h>
 #include <vector>
 
 using namespace QtWaylandClient;
@@ -21,11 +20,12 @@ class CWaylandScreen : public QtWayland:
 
   protected:
     void output_mode(uint32_t flags, int32_t width, int32_t height, int32_t refresh) override;
-    void output_name(const QString& name) override;
+    void output_name(const QString& name);
 };
 
 std::vector<SWaylandScreenInfo> SWaylandScreenInfo::enumerateScreens() {
-    auto*                        display = QWaylandIntegration::instance()->display();
+    static QWaylandIntegration*  inst = new QWaylandIntegration();
+    auto*                        display = inst->display();
 
     std::vector<CWaylandScreen*> screens;
     for (const auto& global : display->globals()) {
