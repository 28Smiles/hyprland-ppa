Index: source/src/scroller.cpp
===================================================================
--- source.orig/src/scroller.cpp
+++ source/src/scroller.cpp
@@ -1265,7 +1265,7 @@ void ScrollerLayout::jump() {
     int i = 0;
     for (auto window : jump_data->windows) {
         const std::string label = generate_label(i++, jump_data->keys, jump_data->nkeys);
-        std::unique_ptr<JumpDecoration> deco = std::make_unique<JumpDecoration>(window.lock(), label);
+        auto deco = makeUnique<JumpDecoration>(window.lock(), label);
         jump_data->decorations.push_back(deco.get());
         HyprlandAPI::addWindowDecoration(PHANDLE, window.lock(), std::move(deco));
     }
Index: source/src/window.cpp
===================================================================
--- source.orig/src/window.cpp
+++ source/src/window.cpp
@@ -11,7 +11,7 @@ Window::Window(PHLWINDOW window, double
     StandardSize h = scroller_sizes.get_window_default_height(window);
     window->m_vPosition.y = maxy;
     update_height(h, box_h);
-    std::unique_ptr<SelectionBorders> deco = std::make_unique<SelectionBorders>(this);
+    auto deco = makeUnique<SelectionBorders>(this);
     decoration = deco.get();
     HyprlandAPI::addWindowDecoration(PHANDLE, window, std::move(deco));
 }
