Index: source/borders-plus-plus/borderDeco.cpp
===================================================================
--- source.orig/borders-plus-plus/borderDeco.cpp
+++ source/borders-plus-plus/borderDeco.cpp
@@ -97,7 +97,7 @@ void CBordersPlusPlus::drawPass(PHLMONIT
         return;
 
     const auto PWORKSPACE      = PWINDOW->m_pWorkspace;
-    const auto WORKSPACEOFFSET = PWORKSPACE && !PWINDOW->m_bPinned ? PWORKSPACE->m_vRenderOffset->value() : Vector2D();
+    const auto WORKSPACEOFFSET = PWORKSPACE && !PWINDOW->m_bPinned ? PWORKSPACE->m_renderOffset->value() : Vector2D();
 
     auto       rounding      = PWINDOW->rounding() == 0 ? 0 : (PWINDOW->rounding() + **PBORDERSIZE) * pMonitor->scale;
     const auto ROUNDINGPOWER = PWINDOW->roundingPower();
Index: source/csgo-vulkan-fix/main.cpp
===================================================================
--- source.orig/csgo-vulkan-fix/main.cpp
+++ source/csgo-vulkan-fix/main.cpp
@@ -60,7 +60,7 @@ void hkSetWindowSize(CXWaylandSurface* s
         newBox.w = **RESX;
         newBox.h = **RESY;
 
-        CWLSurface::fromResource(SURF)->m_bFillIgnoreSmall = true;
+        CWLSurface::fromResource(SURF)->m_fillIgnoreSmall = true;
     }
 
     (*(origSurfaceSize)g_pSurfaceSizeHook->m_pOriginal)(surface, newBox);
Index: source/hyprbars/barDeco.cpp
===================================================================
--- source.orig/hyprbars/barDeco.cpp
+++ source/hyprbars/barDeco.cpp
@@ -534,7 +534,7 @@ void CHyprBar::renderPass(PHLMONITOR pMo
     }
 
     const auto PWORKSPACE      = PWINDOW->m_pWorkspace;
-    const auto WORKSPACEOFFSET = PWORKSPACE && !PWINDOW->m_bPinned ? PWORKSPACE->m_vRenderOffset->value() : Vector2D();
+    const auto WORKSPACEOFFSET = PWORKSPACE && !PWINDOW->m_bPinned ? PWORKSPACE->m_renderOffset->value() : Vector2D();
 
     const auto ROUNDING = PWINDOW->rounding() + (*PPRECEDENCE ? 0 : PWINDOW->getRealBorderSize());
 
@@ -661,7 +661,7 @@ CBox CHyprBar::assignedBoxGlobal() {
     box.translate(g_pDecorationPositioner->getEdgeDefinedPoint(DECORATION_EDGE_TOP, m_pWindow.lock()));
 
     const auto PWORKSPACE      = m_pWindow->m_pWorkspace;
-    const auto WORKSPACEOFFSET = PWORKSPACE && !m_pWindow->m_bPinned ? PWORKSPACE->m_vRenderOffset->value() : Vector2D();
+    const auto WORKSPACEOFFSET = PWORKSPACE && !m_pWindow->m_bPinned ? PWORKSPACE->m_renderOffset->value() : Vector2D();
 
     return box.translate(WORKSPACEOFFSET);
 }
Index: source/hyprexpo/overview.cpp
===================================================================
--- source.orig/hyprexpo/overview.cpp
+++ source/hyprexpo/overview.cpp
@@ -111,7 +111,7 @@ COverview::COverview(PHLWORKSPACE starte
 
     g_pHyprRenderer->m_bBlockSurfaceFeedback = true;
 
-    startedOn->m_bVisible = false;
+    startedOn->m_visible = false;
 
     for (size_t i = 0; i < (size_t)(SIDE_LENGTH * SIDE_LENGTH); ++i) {
         COverview::SWorkspaceImage& image = images[i];
@@ -131,14 +131,14 @@ COverview::COverview(PHLWORKSPACE starte
             image.pWorkspace          = PWORKSPACE;
             PMONITOR->activeWorkspace = PWORKSPACE;
             PWORKSPACE->startAnim(true, true, true);
-            PWORKSPACE->m_bVisible = true;
+            PWORKSPACE->m_visible = true;
 
             if (PWORKSPACE == startedOn)
                 PMONITOR->activeSpecialWorkspace = openSpecial;
 
             g_pHyprRenderer->renderWorkspace(PMONITOR, PWORKSPACE, Time::steadyNow(), monbox);
 
-            PWORKSPACE->m_bVisible = false;
+            PWORKSPACE->m_visible = false;
             PWORKSPACE->startAnim(false, false, true);
 
             if (PWORKSPACE == startedOn)
@@ -157,7 +157,7 @@ COverview::COverview(PHLWORKSPACE starte
 
     PMONITOR->activeSpecialWorkspace = openSpecial;
     PMONITOR->activeWorkspace        = startedOn;
-    startedOn->m_bVisible            = true;
+    startedOn->m_visible            = true;
     startedOn->startAnim(true, true, true);
 
     // zoom on the current workspace.
@@ -254,19 +254,19 @@ void COverview::redrawID(int id, bool fo
     if (openSpecial)
         pMonitor->activeSpecialWorkspace.reset();
 
-    startedOn->m_bVisible = false;
+    startedOn->m_visible = false;
 
     if (PWORKSPACE) {
         pMonitor->activeWorkspace = PWORKSPACE;
         PWORKSPACE->startAnim(true, true, true);
-        PWORKSPACE->m_bVisible = true;
+        PWORKSPACE->m_visible = true;
 
         if (PWORKSPACE == startedOn)
             pMonitor->activeSpecialWorkspace = openSpecial;
 
         g_pHyprRenderer->renderWorkspace(pMonitor.lock(), PWORKSPACE, Time::steadyNow(), monbox);
 
-        PWORKSPACE->m_bVisible = false;
+        PWORKSPACE->m_visible = false;
         PWORKSPACE->startAnim(false, false, true);
 
         if (PWORKSPACE == startedOn)
@@ -279,7 +279,7 @@ void COverview::redrawID(int id, bool fo
 
     pMonitor->activeSpecialWorkspace = openSpecial;
     pMonitor->activeWorkspace        = startedOn;
-    startedOn->m_bVisible            = true;
+    startedOn->m_visible            = true;
     startedOn->startAnim(true, true, true);
 
     blockOverviewRendering = false;
Index: source/hyprtrails/main.cpp
===================================================================
--- source.orig/hyprtrails/main.cpp
+++ source/hyprtrails/main.cpp
@@ -94,7 +94,7 @@ void initGlobal() {
     g_pGlobalState->trailShader.posAttrib = glGetAttribLocation(prog, "pos");
     g_pGlobalState->trailShader.gradient  = glGetUniformLocation(prog, "snapshots");
 
-    g_pGlobalState->tick = wl_event_loop_add_timer(g_pCompositor->m_sWLEventLoop, &onTick, nullptr);
+    g_pGlobalState->tick = wl_event_loop_add_timer(g_pCompositor->m_wlEventLoop, &onTick, nullptr);
     wl_event_source_timer_update(g_pGlobalState->tick, 1);
 }
 
Index: source/hyprtrails/trail.cpp
===================================================================
--- source.orig/hyprtrails/trail.cpp
+++ source/hyprtrails/trail.cpp
@@ -327,7 +327,7 @@ eDecorationType CTrail::getDecorationTyp
 void CTrail::updateWindow(PHLWINDOW pWindow) {
     const auto PWORKSPACE = pWindow->m_pWorkspace;
 
-    const auto WORKSPACEOFFSET = PWORKSPACE && !pWindow->m_bPinned ? PWORKSPACE->m_vRenderOffset->value() : Vector2D();
+    const auto WORKSPACEOFFSET = PWORKSPACE && !pWindow->m_bPinned ? PWORKSPACE->m_renderOffset->value() : Vector2D();
 
     m_vLastWindowPos  = pWindow->m_vRealPosition->value() + WORKSPACEOFFSET;
     m_vLastWindowSize = pWindow->m_vRealSize->value();
Index: source/hyprwinwrap/main.cpp
===================================================================
--- source.orig/hyprwinwrap/main.cpp
+++ source/hyprwinwrap/main.cpp
@@ -89,7 +89,7 @@ void onRenderStage(eRenderStage stage) {
 }
 
 void onCommitSubsurface(CSubsurface* thisptr) {
-    const auto PWINDOW = thisptr->m_pWLSurface->getWindow();
+    const auto PWINDOW = thisptr->m_wlSurface->getWindow();
 
     if (!PWINDOW || std::find_if(bgWindows.begin(), bgWindows.end(), [PWINDOW](const auto& ref) { return ref.lock() == PWINDOW; }) == bgWindows.end()) {
         ((origCommitSubsurface)subsurfaceHook->m_pOriginal)(thisptr);
