Index: source/CMakeLists.txt
===================================================================
--- source.orig/CMakeLists.txt
+++ source/CMakeLists.txt
@@ -9,12 +9,12 @@ project(hyprland-qtutils VERSION ${VER}
 set(CMAKE_CXX_STANDARD 23)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
-find_package(Qt6 6.5 REQUIRED COMPONENTS Widgets Quick QuickControls2 WaylandClient)
+find_package(Qt6 6.4 REQUIRED COMPONENTS Widgets Quick QuickControls2 WaylandClient)
 find_package(PkgConfig REQUIRED)
 
 pkg_check_modules(hyprutils REQUIRED IMPORTED_TARGET hyprutils)
 
-qt_standard_project_setup(REQUIRES 6.5)
+qt_standard_project_setup(REQUIRES 6.4)
 
 add_subdirectory(utils/dialog)
 add_subdirectory(utils/update-screen)
Index: source/utils/dialog/CMakeLists.txt
===================================================================
--- source.orig/utils/dialog/CMakeLists.txt
+++ source/utils/dialog/CMakeLists.txt
@@ -5,12 +5,12 @@ project(hyprland-dialog VERSION ${VER} L
 set(CMAKE_CXX_STANDARD 23)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
-find_package(Qt6 6.5 REQUIRED COMPONENTS Widgets Quick QuickControls2 WaylandClient)
+find_package(Qt6 6.4 REQUIRED COMPONENTS Widgets Quick QuickControls2 WaylandClient)
 find_package(PkgConfig REQUIRED)
 
 pkg_check_modules(hyprutils REQUIRED IMPORTED_TARGET hyprutils)
 
-qt_standard_project_setup(REQUIRES 6.5)
+qt_standard_project_setup(REQUIRES 6.4)
 
 qt_add_executable(hyprland-dialog
     main.cpp
@@ -19,6 +19,7 @@ qt_add_executable(hyprland-dialog
 
 qt_add_qml_module(hyprland-dialog
     URI org.hyprland.dialog
+    RESOURCE_PREFIX /qt/qml
     VERSION 1.0
     QML_FILES main.qml
 )
Index: source/utils/update-screen/CMakeLists.txt
===================================================================
--- source.orig/utils/update-screen/CMakeLists.txt
+++ source/utils/update-screen/CMakeLists.txt
@@ -5,12 +5,12 @@ project(hyprland-update-screen VERSION $
 set(CMAKE_CXX_STANDARD 23)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
-find_package(Qt6 6.5 REQUIRED COMPONENTS Widgets Quick QuickControls2 WaylandClient)
+find_package(Qt6 6.4 REQUIRED COMPONENTS Widgets Quick QuickControls2 WaylandClient)
 find_package(PkgConfig REQUIRED)
 
 pkg_check_modules(hyprutils REQUIRED IMPORTED_TARGET hyprutils)
 
-qt_standard_project_setup(REQUIRES 6.5)
+qt_standard_project_setup(REQUIRES 6.4)
 
 qt_add_executable(hyprland-update-screen
     main.cpp
@@ -21,6 +21,7 @@ qt_add_executable(hyprland-update-screen
 
 qt_add_qml_module(hyprland-update-screen
     URI org.hyprland.update-screen
+    RESOURCE_PREFIX /qt/qml
     VERSION 1.0
     QML_FILES main.qml dialogMain.qml
 )
Index: source/utils/dialog/main.cpp
===================================================================
--- source.orig/utils/dialog/main.cpp
+++ source/utils/dialog/main.cpp
@@ -4,7 +4,6 @@
 #include <qapplication.h>
 #include <qqmlapplicationengine.h>
 #include <qquickstyle.h>
-#include <qtenvironmentvariables.h>
 #include <QQmlContext>
 
 using namespace Hyprutils::String;
@@ -79,7 +78,7 @@ int main(int argc, char* argv[]) {
     app.setApplicationName(appTitle.isEmpty() ? dialog->title : appTitle);
 
     if (qEnvironmentVariableIsEmpty("QT_QUICK_CONTROLS_STYLE"))
-        QQuickStyle::setStyle("org.kde.desktop");
+        QQuickStyle::setStyle("Basic");
 
     QQmlApplicationEngine engine;
     engine.rootContext()->setContextProperty("dialog", dialog);
Index: source/utils/update-screen/main.cpp
===================================================================
--- source.orig/utils/update-screen/main.cpp
+++ source/utils/update-screen/main.cpp
@@ -4,7 +4,6 @@
 #include <qapplication.h>
 #include <qqmlapplicationengine.h>
 #include <qquickstyle.h>
-#include <qtenvironmentvariables.h>
 #include <QQmlContext>
 #include "Dialog.hpp"
 
@@ -45,7 +44,7 @@ int main(int argc, char* argv[]) {
     app.setApplicationDisplayName("Hyprland Updated");
 
     if (qEnvironmentVariableIsEmpty("QT_QUICK_CONTROLS_STYLE"))
-        QQuickStyle::setStyle("org.kde.desktop");
+        QQuickStyle::setStyle("Basic");
 
     // This entire mechanism fucking sucks,
     // but I also suck at qml and I want to avoid spawning a new process as it takes a while.
